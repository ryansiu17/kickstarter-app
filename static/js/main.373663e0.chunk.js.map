{"version":3,"sources":["images/usd-pledged-vs-main-catagory.png","images/sdds.png","images/catagory-size.png","components/Title.js","components/Textbox.js","components/Picture.js","components/Info1.js","components/Info2.js","components/Info3.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","react_default","a","createElement","className","React","Component","Textbox","props","header","body","Picture","src","source","alt","Info1","components_Textbox","components_Picture","catagories","Info2","catagoriesovertime","Info3","distribution","App","components_Title","components_Info1","components_Info2","components_Info3","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yOCezBC,0LAXX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,8EALYC,IAAMC,YCQXC,EARC,SAAAC,GACd,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcI,EAAMC,QAClCR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYI,EAAME,QCDtBC,EAHC,SAAAH,GACd,OAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUQ,IAAKJ,EAAMK,OAAQC,IAAKN,EAAMM,uBCcjDC,EAbD,WACZ,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACa,EAAD,CACEP,OAAQ,kCACRC,KACE,yYAGJT,EAAAC,EAAAC,cAACc,EAAD,CAASJ,OAAQK,IAAYJ,IAAI,sCCIxBK,EAbD,WACZ,OACElB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACa,EAAD,CACEP,OAAQ,uBACRC,KACE,oTAGJT,EAAAC,EAAAC,cAACc,EAAD,CAASJ,OAAQO,IAAoBN,IAAI,4CCIhCO,EAbD,WACZ,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACa,EAAD,CACEP,OAAQ,kCACRC,KACE,6eAGJT,EAAAC,EAAAC,cAACc,EAAD,CAASJ,OAAQS,IAAcR,IAAI,0BCO1BS,mLAXX,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,cAPUrB,aCKEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjC,EAAAC,EAAAC,cAACgC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.373663e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/usd-pledged-vs-main-catagory.af2d971d.png\";","module.exports = __webpack_public_path__ + \"static/media/sdds.c4dbbfa6.png\";","module.exports = __webpack_public_path__ + \"static/media/catagory-size.d7bc76a3.png\";","import React from \"react\";\r\n\r\nclass Title extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h1 className=\"titleHeader\">KickStarter Analysis</h1>\r\n        <p className=\"titleText\">\r\n          Charlie Chung, Justin Huang, Benjamin Zhuang, Ryan Siu, Shreya Raj\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nconst Textbox = props => {\r\n  return (\r\n    <div className=\"textbox\">\r\n      <h1 className=\"textHeader\">{props.header}</h1>\r\n      <p className=\"textBody\">{props.body}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Textbox;\r\n","import React from \"react\";\r\n\r\nconst Picture = props => {\r\n  return <img className=\"picture\" src={props.source} alt={props.alt} />;\r\n};\r\nexport default Picture;\r\n","import React from \"react\";\r\nimport Textbox from \"./Textbox\";\r\nimport Picture from \"./Picture\";\r\nimport catagories from \"../images/usd-pledged-vs-main-catagory.png\";\r\nconst Info1 = () => {\r\n  return (\r\n    <div className=\"info1\">\r\n      <Textbox\r\n        header={\"USD Pledged vs. Main Catagories\"}\r\n        body={\r\n          \"\tOver recent years, the Film & Video Making, Technology, Game, and Design areas have received the most amount of attention from the Kickstarter, whereas areas like Theater, Comics, Photography, and Dance did not seem to be a trend development of Kickstarter’s. However, what this graph has not shown was that the funding of almost every areas has dropped linearly starting in 2015. \"\r\n        }\r\n      />\r\n      <Picture source={catagories} alt=\"usd vs catagory\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Info1;\r\n","import React from \"react\";\r\nimport Textbox from \"./Textbox\";\r\nimport Picture from \"./Picture\";\r\nimport catagoriesovertime from \"../images/sdds.png\";\r\nconst Info2 = () => {\r\n  return (\r\n    <div className=\"info2\">\r\n      <Textbox\r\n        header={\"Catagories Over Time\"}\r\n        body={\r\n          \"For nearly ten years, people pledged for money mostly on Film & Video and Technology. While many category fundings were declining linearly after 2015, the funding of Film & Video Making area still kept at about the same level. In fact, the platform raised the most amount of funding at the year of 2015.\"\r\n        }\r\n      />\r\n      <Picture source={catagoriesovertime} alt=\"Catagories Over TIme\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Info2;\r\n","import React from \"react\";\r\nimport Textbox from \"./Textbox\";\r\nimport Picture from \"./Picture\";\r\nimport distribution from \"../images/catagory-size.png\";\r\nconst Info3 = () => {\r\n  return (\r\n    <div className=\"info3\">\r\n      <Textbox\r\n        header={\"USD Goal Real vs. Main Catagory\"}\r\n        body={\r\n          \"From the graph displayed, areas of Game, Design, and Technology seemed to be equally significant on Kickstarter’s funding budget list, and Film & Video Making area was decently important on their list. Compared to the goal real, Kickstarter probably are expected to put more attention on those technology-related areas, such as Game, Design, and Technology because our society was becoming more and more concerned about online entertainments as well as digital development than ever.\"\r\n        }\r\n      />\r\n      <Picture source={distribution} alt=\"Dist. of catagories\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Info3;\r\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Title from \"./components/Title\";\nimport Info1 from \"./components/Info1\";\nimport Info2 from \"./components/Info2\";\nimport Info3 from \"./components/Info3\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Title />\n        <Info1 />\n        <Info2 />\n        <Info3 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}